package edu.carroll.EatAndShare.backEnd.model;

import jakarta.persistence.*;
import java.util.List;

/**
 * Represents an ingredient used in recipes within the EatAndShare application.
 *
 * <p>This entity maps to the <strong>ingredient</strong> table in the database
 * and stores basic information about each ingredient (e.g., "Flour", "Sugar", "Eggs").
 * It connects to recipes through the {@link RecipeIngredient} bridge table,
 * which defines quantities and units for each ingredient in a specific recipe.</p>
 *
 * <p>Relationships:</p>
 * <ul>
 *   <li>{@link RecipeIngredient} â€“ One-to-Many: an ingredient can appear in multiple recipes.</li>
 * </ul>
 *
 * <p>This class serves as one side of a many-to-many relationship between
 * {@link Recipe} and {@link Ingredient}, resolved through the join entity
 * {@link RecipeIngredient}.</p>
 *
 * @author Andrias
 * @version 1.0
 * @since 2025-10-11
 */
@Entity
@Table(name = "ingredient")
public class Ingredient {

    /** Primary key for the ingredient table, automatically generated by the database. */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ingredient_id")
    private Integer id;

    /** Name of the ingredient (e.g., "Flour", "Salt", "Olive Oil"). */
    @Column(nullable = false)
    private String ingredientName;

    /**
     * One-to-many relationship with {@link RecipeIngredient}.
     * Each ingredient can appear in multiple recipes with defined
     * quantities and units. Cascade ensures that related join entries
     * are saved or deleted with this ingredient.
     */
    @OneToMany(mappedBy = "ingredient", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<RecipeIngredient> recipeIngredients;

    /** @return the ingredient ID */
    public Integer getId() {
        return id;
    }

    /** @param id sets the ingredient ID */
    public void setId(Integer id) {
        this.id = id;
    }

    /** @return the ingredient name */
    public String getIngredientName() {
        return ingredientName;
    }

    /** @param ingredientName sets the ingredient name */
    public void setIngredientName(String ingredientName) {
        this.ingredientName = ingredientName;
    }
}
